# Node.js Function App to Linux on Azure
# Build a Node.js function app and deploy it to Azure as a Linux function app.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
- release
- release-prod

variables:

  
  # Azure Resource Manager connection created during pipeline creation
  #imageName: contoso.azurecr.io/azurefunctions-containers:$(build.buildId)
  vmImageName: 'ubuntu-latest'
  dockerfilePath: '$(Build.SourcesDirectory)/dockerfile'
  imageRepository: 'cred-validation-funcpdf'

  ${{ if eq(variables['Build.SourceBranchName'], 'release') }}:
    azureSubscription: 'OCS_SP_CREDITVALID'
    functionAppName: 'func-credvali-test-east-001'
    environmentName: 'func-credvali-test-east-001'
    dockerRegistryServiceConnection: 'OCS_CONTAINER_REGISTRY'
    containerRegistry: 'crcredvalitesteast001.azurecr.io'
    registryUser: $(REGISTRY_USERNAME)
    registryPass: $(REGISTRY_PASSWORD)
    tag: '1.0.1'

  ${{ if eq(variables['Build.SourceBranchName'], 'release-prod') }}:
    azureSubscription: 'OCS_SP_CREDITVALID_PROD'
    functionAppName: 'func-credvali-prod-east-001'
    environmentName: 'func-credvali-prod-east-001'
    dockerRegistryServiceConnection: 'OCS_CONTAINER_REGISTRY_PROD'
    containerRegistry: 'crcredvaliprodeast001.azurecr.io'
    registryUser: $(REGISTRY_USERNAME_PROD)
    registryPass: $(REGISTRY_PASSWORD_PROD)
    tag: '1.1.1'

stages:
- stage: Build
  displayName: 'Build and push stage'
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)
    - task: AzureFunctionAppContainer@1
      inputs:
        azureSubscription: $(azureSubscription)
        appName: '$(functionAppName)'
        appSettings: '-DOCKER_REGISTRY_SERVER_URL $(containerRegistry) -DOCKER_REGISTRY_SERVER_USERNAME $(registryUser) -DOCKER_REGISTRY_SERVER_PASSWORD $(registryPass)'
        imageName: '$(containerRegistry)/$(imageRepository):$(tag)'
